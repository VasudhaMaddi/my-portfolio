{"ast":null,"code":"var _jsxFileName = \"/Users/vasudhamaddi/Downloads/vasudha-portfolio 5/src/components/Projects.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Element } from 'react-scroll';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Sample project data (replace with your actual data)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectData = [{\n  name: \"Spam Email Detection\",\n  description: \"A spam detection system using NLP techniques like TF-IDF, lemmatization, and ensemble learning. Achieved 98% accuracy on over 5,000 emails.\",\n  skills: [\"Python\", \"Pandas\", \"NumPy\", \"scikit-learn\", \"SVM\", \"KNN\", \"Naïve Bayes\", \"Decision Tree\", \"Logistic Regression\", \"Random Forest\", \"AdaBoost\", \"Gradient Boosting\", \"XGBoost\", \"GridSearchCV\", \"TF-IDF\", \"Lemmatization\", \"Stopword Removal\", \"Tokenization\", \"Text Cleaning\", \"Confusion Matrix\", \"Voting Classifier\"]\n}, {\n  name: \"Paraphrase Identification\",\n  description: \"Built a transformer-based model using BERT, ELECTRA, and MobileBERT for semantic equivalence detection. Achieved 83%+ accuracy.\",\n  skills: [\"Python\", \"TensorFlow\", \"Keras\", \"BERT\", \"DistilBERT\", \"ELECTRA\", \"MobileBERT\", \"Transformer Fine-tuning\", \"Tokenization\", \"Attention Masks\", \"Text Normalization\"]\n}, {\n  name: \"Pension Management System\",\n  description: \"Microservices-based system built using Java and Spring Boot, featuring secure APIs and responsive UI. Improved user satisfaction by 35%.\",\n  skills: [\"Java\", \"Spring Boot\", \"Spring MVC\", \"Spring Core\", \"Spring Security\", \"JWT\", \"REST API\", \"JSP\", \"HTML\", \"CSS\", \"Bootstrap\", \"Swagger UI\", \"H2 Database\"]\n}, {\n  name: \"Real-Time Facial Emotion Recognition\",\n  description: \"Real-time CNN & ResEmoteNet system using OpenCV and FER2013 dataset. Included SE blocks, residuals, and real-time inference pipeline.\",\n  skills: [\"Python\", \"TensorFlow\", \"Keras\", \"CNN\", \"ResEmoteNet\", \"Residual Connections\", \"SE Blocks\", \"OpenCV\", \"FER2013\", \"Data Augmentation\", \"Face Detection\", \"Normalization\", \"Hyperparameter Tuning\", \"Live Video Processing\"]\n}];\n\n// Combine all skills into a unique list for tag filtering\nconst allTags = [\"All\", ...Array.from(new Set(projectData.flatMap(p => p.skills)))];\nconst Projects = () => {\n  _s();\n  const [selectedTag, setSelectedTag] = React.useState(\"All\");\n  const filtered = selectedTag === \"All\" ? projectData : projectData.filter(p => p.skills.includes(selectedTag));\n  return (\n    /*#__PURE__*/\n    // Wrap the section in an Element with name \"projects\"\n    _jsxDEV(Element, {\n      name: \"projects\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"min-h-screen snap-start flex flex-col items-center justify-start bg-gradient-to-r from-pink-50 to-purple-50 text-center px-4 py-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-4xl font-bold mb-6\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center gap-2 mb-6\",\n          children: allTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedTag(tag),\n            className: \"px-4 py-1 rounded-full border \" + (selectedTag === tag ? 'bg-purple-600 text-white' : 'bg-white text-purple-700 border-purple-300') + \" hover:bg-purple-700 hover:text-white text-sm transition\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          layout: true,\n          className: \"flex overflow-x-auto gap-6 w-full\",\n          children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: filtered.map(proj => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                x: 20\n              },\n              animate: {\n                opacity: 1,\n                x: 0\n              },\n              exit: {\n                opacity: 0,\n                x: -10\n              },\n              transition: {\n                duration: 0.3\n              },\n              className: \"bg-white p-5 rounded shadow text-left min-w-[280px] flex-shrink-0 h-[350px]\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-bold text-purple-700 mb-1\",\n                children: proj.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-700 mb-2\",\n                children: proj.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-600 mb-2\",\n                children: \"Key Skills:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-2 mt-1\",\n                children: proj.skills.map((skill, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-xs\",\n                  children: skill\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, proj.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Projects, \"d7+tQReOVn3TXJJzPRfdG1JM1fg=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Element","motion","AnimatePresence","jsxDEV","_jsxDEV","projectData","name","description","skills","allTags","Array","from","Set","flatMap","p","Projects","_s","selectedTag","setSelectedTag","useState","filtered","filter","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","onClick","div","layout","proj","initial","opacity","x","animate","exit","transition","duration","skill","j","_c","$RefreshReg$"],"sources":["/Users/vasudhamaddi/Downloads/vasudha-portfolio 5/src/components/Projects.js"],"sourcesContent":["import React from 'react';\nimport { Element } from 'react-scroll';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Sample project data (replace with your actual data)\nconst projectData = [\n  {\n    name: \"Spam Email Detection\",\n    description:\n      \"A spam detection system using NLP techniques like TF-IDF, lemmatization, and ensemble learning. Achieved 98% accuracy on over 5,000 emails.\",\n    skills: [\n      \"Python\", \"Pandas\", \"NumPy\", \"scikit-learn\", \"SVM\", \"KNN\", \"Naïve Bayes\",\n      \"Decision Tree\", \"Logistic Regression\", \"Random Forest\", \"AdaBoost\",\n      \"Gradient Boosting\", \"XGBoost\", \"GridSearchCV\", \"TF-IDF\", \"Lemmatization\",\n      \"Stopword Removal\", \"Tokenization\", \"Text Cleaning\", \"Confusion Matrix\", \"Voting Classifier\"\n    ]\n  },\n  {\n    name: \"Paraphrase Identification\",\n    description:\n      \"Built a transformer-based model using BERT, ELECTRA, and MobileBERT for semantic equivalence detection. Achieved 83%+ accuracy.\",\n    skills: [\n      \"Python\", \"TensorFlow\", \"Keras\", \"BERT\", \"DistilBERT\", \"ELECTRA\", \"MobileBERT\",\n      \"Transformer Fine-tuning\", \"Tokenization\", \"Attention Masks\", \"Text Normalization\"\n    ]\n  },\n  {\n    name: \"Pension Management System\",\n    description:\n      \"Microservices-based system built using Java and Spring Boot, featuring secure APIs and responsive UI. Improved user satisfaction by 35%.\",\n    skills: [\n      \"Java\", \"Spring Boot\", \"Spring MVC\", \"Spring Core\", \"Spring Security\", \"JWT\",\n      \"REST API\", \"JSP\", \"HTML\", \"CSS\", \"Bootstrap\", \"Swagger UI\", \"H2 Database\"\n    ]\n  },\n  {\n    name: \"Real-Time Facial Emotion Recognition\",\n    description:\n      \"Real-time CNN & ResEmoteNet system using OpenCV and FER2013 dataset. Included SE blocks, residuals, and real-time inference pipeline.\",\n    skills: [\n      \"Python\", \"TensorFlow\", \"Keras\", \"CNN\", \"ResEmoteNet\", \"Residual Connections\",\n      \"SE Blocks\", \"OpenCV\", \"FER2013\", \"Data Augmentation\", \"Face Detection\",\n      \"Normalization\", \"Hyperparameter Tuning\", \"Live Video Processing\"\n    ]\n  }\n];\n\n// Combine all skills into a unique list for tag filtering\nconst allTags = [\"All\", ...Array.from(new Set(projectData.flatMap(p => p.skills)))];\n\nconst Projects = () => {\n  const [selectedTag, setSelectedTag] = React.useState(\"All\");\n\n  const filtered = selectedTag === \"All\"\n    ? projectData\n    : projectData.filter(p => p.skills.includes(selectedTag));\n\n  return (\n    // Wrap the section in an Element with name \"projects\"\n    <Element name=\"projects\">\n      <section className=\"min-h-screen snap-start flex flex-col items-center justify-start bg-gradient-to-r from-pink-50 to-purple-50 text-center px-4 py-16\">\n        <h2 className=\"text-4xl font-bold mb-6\">Projects</h2>\n\n        {/* Tag filtering buttons */}\n        <div className=\"flex flex-wrap justify-center gap-2 mb-6\">\n          {allTags.map(tag => (\n            <button\n              key={tag}\n              onClick={() => setSelectedTag(tag)}\n              className={\n                \"px-4 py-1 rounded-full border \" +\n                (selectedTag === tag\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-white text-purple-700 border-purple-300') +\n                \" hover:bg-purple-700 hover:text-white text-sm transition\"\n              }\n            >\n              {tag}\n            </button>\n          ))}\n        </div>\n\n        {/* Horizontal scroll container for project cards */}\n        <motion.div layout className=\"flex overflow-x-auto gap-6 w-full\">\n          <AnimatePresence>\n            {filtered.map(proj => (\n              <motion.div\n                key={proj.name}\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -10 }}\n                transition={{ duration: 0.3 }}\n                className=\"bg-white p-5 rounded shadow text-left min-w-[280px] flex-shrink-0 h-[350px]\"\n              >\n                <h3 className=\"text-xl font-bold text-purple-700 mb-1\">{proj.name}</h3>\n                <p className=\"text-sm text-gray-700 mb-2\">{proj.description}</p>\n                <p className=\"text-xs text-gray-600 mb-2\">Key Skills:</p>\n                <div className=\"flex flex-wrap gap-2 mt-1\">\n                  {proj.skills.map((skill, j) => (\n                    <span key={j} className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-xs\">\n                      {skill}\n                    </span>\n                  ))}\n                </div>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n        </motion.div>\n      </section>\n    </Element>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}