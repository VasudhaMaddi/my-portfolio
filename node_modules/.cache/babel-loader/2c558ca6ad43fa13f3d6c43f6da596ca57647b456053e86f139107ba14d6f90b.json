{"ast":null,"code":"var _jsxFileName = \"/Users/vasudhamaddi/Downloads/vasudha-portfolio 5/src/components/Projects.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Element } from 'react-scroll';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Updated project data with five projects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectData = [{\n  name: \"Spam Email Detection\",\n  description: \"A robust spam detection system leveraging NLP techniques such as TF-IDF, lemmatization, and machine learning classifiers to achieve high accuracy in identifying spam emails.\",\n  skills: [\"Python\", \"Pandas\", \"NumPy\", \"scikit-learn\", \"TF-IDF\", \"Lemmatization\", \"Machine Learning\", \"NLP\"],\n  github: \"https://github.com/VasudhaMaddi/Spam-Email-Detection-NLP\"\n}, {\n  name: \"Paraphrase Identification\",\n  description: \"A transformer-based model using state-of-the-art architectures to detect semantic equivalence between sentences, improving text similarity measurement accuracy.\",\n  skills: [\"Python\", \"TensorFlow\", \"Keras\", \"BERT\", \"Transformer\", \"NLP\"],\n  github: \"https://github.com/VasudhaMaddi/Paraphrase-Identification\"\n}, {\n  name: \"Pension Management System\",\n  description: \"A microservices-based system built using Java and Spring Boot that provides a secure and responsive interface for managing pension records.\",\n  skills: [\"Java\", \"Spring Boot\", \"Microservices\", \"REST API\", \"SQL\"],\n  github: \"https://github.com/VasudhaMaddi/Pension-Management-System-Project\"\n}, {\n  name: \"Real-Time Facial Emotion Recognition\",\n  description: \"A real-time emotion recognition system leveraging CNN architectures and advanced computer vision techniques to analyze facial expressions.\",\n  skills: [\"Python\", \"TensorFlow\", \"Keras\", \"CNN\", \"Computer Vision\", \"OpenCV\"],\n  github: \"https://github.com/VasudhaMaddi/Real-Time-Facial-Emotion-Recognition\"\n}, {\n  name: \"Topic Modeling\",\n  description: \"A topic modeling application that uses NLP techniques to extract meaningful topics from large text corpora, employing algorithms like LDA for effective text clustering.\",\n  skills: [\"Python\", \"NLTK\", \"Gensim\", \"LDA\", \"Topic Modeling\", \"NLP\"],\n  github: \"https://github.com/VasudhaMaddi/Topic-Modeling-NLP\"\n}];\n\n// Aggregate all unique skills for tag filtering.\nconst allTags = [\"All\", ...Array.from(new Set(projectData.flatMap(p => p.skills)))];\nconst Projects = () => {\n  _s();\n  const [selectedTag, setSelectedTag] = React.useState(\"All\");\n  const filtered = selectedTag === \"All\" ? projectData : projectData.filter(p => p.skills.includes(selectedTag));\n  return /*#__PURE__*/_jsxDEV(Element, {\n    name: \"projects\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"min-h-screen snap-start flex flex-col items-center justify-start bg-gradient-to-r from-pink-50 to-purple-50 text-center px-4 py-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center gap-2 mb-6\",\n        children: allTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedTag(tag),\n          className: `px-4 py-1 rounded-full border ${selectedTag === tag ? 'bg-purple-600 text-white' : 'bg-white text-purple-700 border-purple-300'} hover:bg-purple-700 hover:text-white text-sm transition`,\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        layout: true,\n        className: \"flex overflow-x-auto gap-6 w-full pb-4 justify-center\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: filtered.map(proj => /*#__PURE__*/_jsxDEV(motion.a, {\n            href: proj.github,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            initial: {\n              opacity: 0,\n              x: 20\n            },\n            animate: {\n              opacity: 1,\n              x: 0\n            },\n            exit: {\n              opacity: 0,\n              x: -10\n            },\n            transition: {\n              duration: 0.3\n            }\n            // Fixed width so cards are horizontal, auto height for wrapping content\n            ,\n            className: \"bg-white p-5 rounded shadow text-left flex-shrink-0 w-80 flex flex-col cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-purple-700 mb-1\",\n              children: proj.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700 mb-2 break-words whitespace-normal\",\n              children: proj.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600 mb-2\",\n              children: \"Key Skills:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2 mt-1\",\n              children: proj.skills.map((skill, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-xs\",\n                children: skill\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, proj.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"d7+tQReOVn3TXJJzPRfdG1JM1fg=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Element","motion","AnimatePresence","jsxDEV","_jsxDEV","projectData","name","description","skills","github","allTags","Array","from","Set","flatMap","p","Projects","_s","selectedTag","setSelectedTag","useState","filtered","filter","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","onClick","div","layout","proj","a","href","target","rel","initial","opacity","x","animate","exit","transition","duration","skill","j","_c","$RefreshReg$"],"sources":["/Users/vasudhamaddi/Downloads/vasudha-portfolio 5/src/components/Projects.js"],"sourcesContent":["import React from 'react';\nimport { Element } from 'react-scroll';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Updated project data with five projects\nconst projectData = [\n  {\n    name: \"Spam Email Detection\",\n    description:\n      \"A robust spam detection system leveraging NLP techniques such as TF-IDF, lemmatization, and machine learning classifiers to achieve high accuracy in identifying spam emails.\",\n    skills: [\n      \"Python\", \"Pandas\", \"NumPy\", \"scikit-learn\", \"TF-IDF\", \"Lemmatization\", \"Machine Learning\", \"NLP\"\n    ],\n    github: \"https://github.com/VasudhaMaddi/Spam-Email-Detection-NLP\"\n  },\n  {\n    name: \"Paraphrase Identification\",\n    description:\n      \"A transformer-based model using state-of-the-art architectures to detect semantic equivalence between sentences, improving text similarity measurement accuracy.\",\n    skills: [\n      \"Python\", \"TensorFlow\", \"Keras\", \"BERT\", \"Transformer\", \"NLP\"\n    ],\n    github: \"https://github.com/VasudhaMaddi/Paraphrase-Identification\"\n  },\n  {\n    name: \"Pension Management System\",\n    description:\n      \"A microservices-based system built using Java and Spring Boot that provides a secure and responsive interface for managing pension records.\",\n    skills: [\n      \"Java\", \"Spring Boot\", \"Microservices\", \"REST API\", \"SQL\"\n    ],\n    github: \"https://github.com/VasudhaMaddi/Pension-Management-System-Project\"\n  },\n  {\n    name: \"Real-Time Facial Emotion Recognition\",\n    description:\n      \"A real-time emotion recognition system leveraging CNN architectures and advanced computer vision techniques to analyze facial expressions.\",\n    skills: [\n      \"Python\", \"TensorFlow\", \"Keras\", \"CNN\", \"Computer Vision\", \"OpenCV\"\n    ],\n    github: \"https://github.com/VasudhaMaddi/Real-Time-Facial-Emotion-Recognition\"\n  },\n  {\n    name: \"Topic Modeling\",\n    description:\n      \"A topic modeling application that uses NLP techniques to extract meaningful topics from large text corpora, employing algorithms like LDA for effective text clustering.\",\n    skills: [\n      \"Python\", \"NLTK\", \"Gensim\", \"LDA\", \"Topic Modeling\", \"NLP\"\n    ],\n    github: \"https://github.com/VasudhaMaddi/Topic-Modeling-NLP\"\n  }\n];\n\n// Aggregate all unique skills for tag filtering.\nconst allTags = [\"All\", ...Array.from(new Set(projectData.flatMap(p => p.skills)))];\n\nconst Projects = () => {\n  const [selectedTag, setSelectedTag] = React.useState(\"All\");\n\n  const filtered = selectedTag === \"All\"\n    ? projectData\n    : projectData.filter(p => p.skills.includes(selectedTag));\n\n  return (\n    <Element name=\"projects\">\n      <section className=\"min-h-screen snap-start flex flex-col items-center justify-start bg-gradient-to-r from-pink-50 to-purple-50 text-center px-4 py-16\">\n        <h2 className=\"text-4xl font-bold mb-6\">Projects</h2>\n\n        {/* Tag filtering buttons */}\n        <div className=\"flex flex-wrap justify-center gap-2 mb-6\">\n          {allTags.map(tag => (\n            <button\n              key={tag}\n              onClick={() => setSelectedTag(tag)}\n              className={`px-4 py-1 rounded-full border ${\n                selectedTag === tag\n                  ? 'bg-purple-600 text-white'\n                  : 'bg-white text-purple-700 border-purple-300'\n              } hover:bg-purple-700 hover:text-white text-sm transition`}\n            >\n              {tag}\n            </button>\n          ))}\n        </div>\n\n        {/* Horizontal scroll container for project cards */}\n        <motion.div\n          layout\n          className=\"flex overflow-x-auto gap-6 w-full pb-4 justify-center\"\n        >\n          <AnimatePresence>\n            {filtered.map(proj => (\n              <motion.a\n                key={proj.name}\n                href={proj.github}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -10 }}\n                transition={{ duration: 0.3 }}\n                // Fixed width so cards are horizontal, auto height for wrapping content\n                className=\"bg-white p-5 rounded shadow text-left flex-shrink-0 w-80 flex flex-col cursor-pointer\"\n              >\n                <h3 className=\"text-xl font-bold text-purple-700 mb-1\">{proj.name}</h3>\n                <p className=\"text-sm text-gray-700 mb-2 break-words whitespace-normal\">\n                  {proj.description}\n                </p>\n                <p className=\"text-xs text-gray-600 mb-2\">Key Skills:</p>\n                <div className=\"flex flex-wrap gap-2 mt-1\">\n                  {proj.skills.map((skill, j) => (\n                    <span key={j} className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-xs\">\n                      {skill}\n                    </span>\n                  ))}\n                </div>\n              </motion.a>\n            ))}\n          </AnimatePresence>\n        </motion.div>\n      </section>\n    </Element>\n  );\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,IAAI,EAAE,sBAAsB;EAC5BC,WAAW,EACT,+KAA+K;EACjLC,MAAM,EAAE,CACN,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,kBAAkB,EAAE,KAAK,CAClG;EACDC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,2BAA2B;EACjCC,WAAW,EACT,kKAAkK;EACpKC,MAAM,EAAE,CACN,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,CAC9D;EACDC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,2BAA2B;EACjCC,WAAW,EACT,6IAA6I;EAC/IC,MAAM,EAAE,CACN,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,UAAU,EAAE,KAAK,CAC1D;EACDC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,sCAAsC;EAC5CC,WAAW,EACT,4IAA4I;EAC9IC,MAAM,EAAE,CACN,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE,QAAQ,CACpE;EACDC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,IAAI,EAAE,gBAAgB;EACtBC,WAAW,EACT,0KAA0K;EAC5KC,MAAM,EAAE,CACN,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,CAC3D;EACDC,MAAM,EAAE;AACV,CAAC,CACF;;AAED;AACA,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACR,WAAW,CAACS,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACP,MAAM,CAAC,CAAC,CAAC,CAAC;AAEnF,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMC,QAAQ,GAAGH,WAAW,KAAK,KAAK,GAClCb,WAAW,GACXA,WAAW,CAACiB,MAAM,CAACP,CAAC,IAAIA,CAAC,CAACP,MAAM,CAACe,QAAQ,CAACL,WAAW,CAAC,CAAC;EAE3D,oBACEd,OAAA,CAACJ,OAAO;IAACM,IAAI,EAAC,UAAU;IAAAkB,QAAA,eACtBpB,OAAA;MAASqB,SAAS,EAAC,oIAAoI;MAAAD,QAAA,gBACrJpB,OAAA;QAAIqB,SAAS,EAAC,yBAAyB;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGrDzB,OAAA;QAAKqB,SAAS,EAAC,0CAA0C;QAAAD,QAAA,EACtDd,OAAO,CAACoB,GAAG,CAACC,GAAG,iBACd3B,OAAA;UAEE4B,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACY,GAAG,CAAE;UACnCN,SAAS,EAAE,iCACTP,WAAW,KAAKa,GAAG,GACf,0BAA0B,GAC1B,4CAA4C,0DACS;UAAAP,QAAA,EAE1DO;QAAG,GARCA,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASF,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNzB,OAAA,CAACH,MAAM,CAACgC,GAAG;QACTC,MAAM;QACNT,SAAS,EAAC,uDAAuD;QAAAD,QAAA,eAEjEpB,OAAA,CAACF,eAAe;UAAAsB,QAAA,EACbH,QAAQ,CAACS,GAAG,CAACK,IAAI,iBAChB/B,OAAA,CAACH,MAAM,CAACmC,CAAC;YAEPC,IAAI,EAAEF,IAAI,CAAC1B,MAAO;YAClB6B,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YACzBC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAG,CAAE;YAC/BC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAE,CAAE;YAC9BE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,CAAC,EAAE,CAAC;YAAG,CAAE;YAC7BG,UAAU,EAAE;cAAEC,QAAQ,EAAE;YAAI;YAC5B;YAAA;YACArB,SAAS,EAAC,uFAAuF;YAAAD,QAAA,gBAEjGpB,OAAA;cAAIqB,SAAS,EAAC,wCAAwC;cAAAD,QAAA,EAAEW,IAAI,CAAC7B;YAAI;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvEzB,OAAA;cAAGqB,SAAS,EAAC,0DAA0D;cAAAD,QAAA,EACpEW,IAAI,CAAC5B;YAAW;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eACJzB,OAAA;cAAGqB,SAAS,EAAC,4BAA4B;cAAAD,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACzDzB,OAAA;cAAKqB,SAAS,EAAC,2BAA2B;cAAAD,QAAA,EACvCW,IAAI,CAAC3B,MAAM,CAACsB,GAAG,CAAC,CAACiB,KAAK,EAAEC,CAAC,kBACxB5C,OAAA;gBAAcqB,SAAS,EAAC,yDAAyD;gBAAAD,QAAA,EAC9EuB;cAAK,GADGC,CAAC;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEN,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA,GAtBDM,IAAI,CAAC7B,IAAI;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuBN,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACZ,EAAA,CAnEID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAqEd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}